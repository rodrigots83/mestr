print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
copiaVariaveis1Winsored <- c("Produtos_Qualificados",
"winsored_Produtos_Qualificados_PERC",
"Produtos_DIF",
"winsored_Produtos_PERC",
"winsored_Movimentacoes",
"winsored_Movimentacoes_PERC",
"winsored_Aplicacao",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Rentabilidade",
"winsored_Rentabilidade_Anterior")
box_plot(credit, copiaVariaveis1Winsored)
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
caption = paste(c(variavelDependente, atributo))) +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
copiaVariaveis1Winsored <- c("Produtos_Qualificados",
"winsored_Produtos_Qualificados_PERC",
"Produtos_DIF",
"winsored_Produtos_PERC",
"winsored_Movimentacoes",
"winsored_Movimentacoes_PERC",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Rentabilidade",
"winsored_Rentabilidade_Anterior")
box_plot(credit, copiaVariaveis1Winsored)
---
title: "R Notebook"
output:
pdf_document: default
html_notebook: default
---
```{r}
# install.packages("ggplot2")
# install.packages("data.table")
# install.packages("stargazer")
# install.packages("skimr")
library(ggplot2)
library(data.table)
library(stargazer)
library(skimr)
library(readxl)
library(dplyr)
dtAmostra <- fread("dadosBanco/Amostra_Modelo_Evasao_Correntistas_v3.csv")
dtAmostra$Evadiu <- as.factor(dtAmostra$Evadiu)
dtAmostra$Debito_Automatico <- as.factor(dtAmostra$Debito_Automatico)
dtAmostra$Credito_Salario <- as.factor(dtAmostra$Credito_Salario)
dtAmostra$Credenciamento <- as.factor(dtAmostra$Credenciamento)
dtAmostra$Caixa_Seguradora <- as.factor(dtAmostra$Caixa_Seguradora)
dtAmostra$Pediu_Portabilidade <- as.factor(dtAmostra$Pediu_Portabilidade)
dtAmostra$Abriu_Reclamacao <- as.factor(dtAmostra$Abriu_Reclamacao)
dtAmostra$Debito_Automatico_DIF <- as.factor(dtAmostra$Debito_Automatico_DIF)
dtAmostra$Credito_Salario_DIF <- as.factor(dtAmostra$Credito_Salario_DIF)
dtAmostra$Caixa_Seguradora_DIF <- as.factor(dtAmostra$Caixa_Seguradora_DIF)
str(dtAmostra)
### A variável "Pediu_Portabilidade" possui somente o valor igual a 0
dtAmostra =
dtAmostra %>%
mutate(Evadiu_formatado = ifelse(Evadiu == 1, "Sim", "Não")) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1)) %>%
mutate(winsored_Produtos = psych::winsor(Produtos, 0.01)) %>%
mutate(winsored_Produtos_Qualificados_PERC = psych::winsor(Produtos_Qualificados_PERC, 0.01)) %>%
mutate(winsored_Produtos_PERC = psych::winsor(Produtos_PERC, 0.01)) %>%
mutate(winsored_Movimentacoes = psych::winsor(Movimentacoes, 0.1)) %>%
mutate(winsored_Movimentacoes_PERC = psych::winsor(Movimentacoes_PERC, 0.1)) %>%
mutate(winsored_Aplicacao = psych::winsor(Aplicacao, 0.1)) %>%
mutate(winsored_Aplicacao_Anterior = psych::winsor(Aplicacao_Anterior, 0.1)) %>%
mutate(winsored_Aplicacao_DIF = psych::winsor(Aplicacao_DIF, 0.1)) %>%
mutate(winsored_Aplicacao_PERC = psych::winsor(Aplicacao_PERC, 0.1)) %>%
mutate(winsored_Credito = psych::winsor(Credito, 0.1)) %>%
mutate(winsored_Credito_Anterior = psych::winsor(Credito_Anterior, 0.1)) %>%
mutate(winsored_Credito_DIF = psych::winsor(Credito_DIF, 0.1)) %>%
mutate(winsored_Credito_PERC = psych::winsor(Credito_PERC, 0.1)) %>%
mutate(winsored_Rentabilidade = psych::winsor(Rentabilidade, 0.1)) %>%
mutate(winsored_Rentabilidade_Anterior = psych::winsor(Rentabilidade_Anterior, 0.1)) %>%
mutate(winsored_Rentabilidade_DIF = psych::winsor(Rentabilidade_DIF, 0.1)) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1))
# ggplot(data = dtAmostra, aes(Evadiu_formatado, winsored_Produtos)) +
#   # geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.2) +
#   geom_boxplot() +
#   # aes(fill = Segmento)
#   labs(title = "Box Plot",
#        subtitle = "",
#        x = "",
#        y = "") +
#   theme_bw() +
#   facet_wrap(~ Segmento)
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
caption = paste(c(variavelDependente, atributo))) +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
variaveisSubgrupo <- c("Segmento", "Credenciamento", "Caixa_Seguradora", "Caixa_Seguradora_DIF", "Credito_Salario", "Debito_Automatico", "Credito_Salario_DIF", "Debito_Automatico_DIF")
variaveis1 <- c("Abriu_Reclamacao",
"Produtos_Qualificados",
"Produtos_Qualificados_Anterior",
"Produtos_Qualificados_DIF",
## USAR WINSOR
"Produtos_Qualificados_PERC",
#NÃO TROUXE RESULTADOS BONS
"Produtos",
##NÃO TROUXE RESULTADOS BONS
"Produtos_Anterior",
"Produtos_DIF",
## USAR WINSORED
"Produtos_PERC",
"Movimentacoes",
"Movimentacoes_Anterior",
##NÃO TROUXE RESULTADOS BONS
"Movimentacoes_DIF",
## USAR WINSOR
"Movimentacoes_PERC",
## USAR WINSOR
"Aplicacao",
## USAR WINSOR
"Aplicacao_Anterior",
## USAR WINSOR
"Aplicacao_DIF",
## USAR WINSOR
"Aplicacao_PERC",
## USAR WINSOR
"Credito",
## USAR WINSOR
"Credito_Anterior",
## USAR WINSOR
"Credito_DIF",
## USAR WINSOR
"Credito_PERC",
## USAR WINSOR
"Rentabilidade",
## USAR WINSOR
"Rentabilidade_Anterior",
## USAR WINSOR
"Rentabilidade_DIF",
## USAR WINSOR
"Rentabilidade_PERC")
copiaVariaveis1Winsored <- c("Produtos_Qualificados",
"winsored_Produtos_Qualificados_PERC",
"Produtos_DIF",
"winsored_Produtos_PERC",
"winsored_Movimentacoes",
"winsored_Movimentacoes_PERC",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Rentabilidade",
"winsored_Rentabilidade_Anterior")
variaveis2 <- c('winsored_Aplicacao',
'winsored_Aplicacao_Anterior',
'winsored_Aplicacao_DIF',
'winsored_Aplicacao_PERC',
'winsored_Credito',
'winsored_Credito_Anterior',
'winsored_Credito_DIF',
'winsored_Credito_PERC',
'winsored_Rentabilidade',
'winsored_Rentabilidade_Anterior',
'winsored_Rentabilidade_DIF',
'winsored_Rentabilidade_PERC')
box_plot(credit, copiaVariaveis1Winsored)
```
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
caption = paste(variavelDependente, atributo, sep = "vs")) +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
box_plot(credit, copiaVariaveis1Winsored)
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
caption = paste(variavelDependente, atributo, sep = " vs ")) +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
title = "Boxplot",
subtitle = paste(variavelDependente, atributo, sep = " vs "),
caption = "") +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
box_plot = function(data, atributos, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
# for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
# geom_boxplot(aes_string(fill = atributo2)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
title = "Boxplot",
subtitle = paste(atributo, variavelDependente, sep = " vs "),
caption = "") +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
# }
}
}
box_plot(credit, copiaVariaveis1Winsored)
box_plot = function(data, atributos, atributosSubgrupo, variavelDependente = 'Evadiu_formatado'){
for (atributo in atributos) {
if(length(atributosSubgrupo) > 0){
for (atributo2 in atributosSubgrupo){
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
geom_boxplot(aes_string(fill = atributo2)) +
# geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
title = "Boxplot",
subtitle = paste(atributo, variavelDependente, sep = " vs "),
caption = "") +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
}
}
else{
result = ggplot(data = dtAmostra, aes_string(variavelDependente, atributo)) +
geom_boxplot() +
labs(x = variavelDependente,
y = atributo,
title = "Boxplot",
subtitle = paste(atributo, variavelDependente, sep = " vs "),
caption = "") +
theme_bw()
# facet_wrap(~ atributo2)
print(result)
}
}
}
box_plot(credit, copiaVariaveis1Winsored, NULL)
box_plot(credit, copiaVariaveis1Winsored, variaveisSubgrupo)
box_plot(credit, c("winsored_Rentabilidade"), variaveisSubgrupo)
box_plot(credit, copiaVariaveis1Winsored, NULL)
box_plot(credit, c("winsored_Movimentacoes_PERC"), variaveisSubgrupo)
box_plot(credit, c("winsored_Movimentacoes"), variaveisSubgrupo)
box_plot(credit, variaveis2, NULL)
box_plot(credit, c("winsored_Aplicacao"), variaveisSubgrupo)
box_plot(credit, variaveis2, NULL)
box_plot(credit, variaveis1, NULL)
winsor?
?winsor
str(dtAmostra)
variaveisIniciais <- c("Produto",
"Produtos_Anterior",
"Produtos_DIF",
"winsored_Produtos_Qualificados_PERC",
"Produtos_Qualificados_DIRF",
"Produtos_Qualificados_Anterior",
"Produtos_Qualificados",
"winsored_Produtos_PERC",
"winsored_Aplicacao",
"winsored_Aplicacao_Anterior",
"winsored_Aplicacao_PERC",
"winsored_Aplicacao_DIF",
"winsored_Movimentacoes",
"winsored_Movimentacoes_DIF",
"winsored_Movimentacoes_PERC",
"winsored_Movimentacoes_Anterior",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Credito_PERC",
"winsored_Credito_DIF",
"winsored_Rentabilidade",
"winsored_Rentabilidade_DIF",
"winsored_Rentabilidade_Anterior",
"winsored_Rentabilidade_PERC")
box_plot(credit, variaveisIniciais, NULL)
str(dtAmostra)
variaveisIniciais <- c("Produtos",
"Produtos_Anterior",
"Produtos_DIF",
"winsored_Produtos_Qualificados_PERC",
"Produtos_Qualificados_DIRF",
"Produtos_Qualificados_Anterior",
"Produtos_Qualificados",
"winsored_Produtos_PERC",
"winsored_Aplicacao",
"winsored_Aplicacao_Anterior",
"winsored_Aplicacao_PERC",
"winsored_Aplicacao_DIF",
"winsored_Movimentacoes",
"winsored_Movimentacoes_DIF",
"winsored_Movimentacoes_PERC",
"winsored_Movimentacoes_Anterior",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Credito_PERC",
"winsored_Credito_DIF",
"winsored_Rentabilidade",
"winsored_Rentabilidade_DIF",
"winsored_Rentabilidade_Anterior",
"winsored_Rentabilidade_PERC")
box_plot(credit, variaveisIniciais, NULL)
variaveisIniciais <- c("Produtos",
"Produtos_Anterior",
"Produtos_DIF",
"winsored_Produtos_Qualificados_PERC",
"Produtos_Qualificados_DIF",
"Produtos_Qualificados_Anterior",
"Produtos_Qualificados",
"winsored_Produtos_PERC",
"winsored_Aplicacao",
"winsored_Aplicacao_Anterior",
"winsored_Aplicacao_PERC",
"winsored_Aplicacao_DIF",
"winsored_Movimentacoes",
"winsored_Movimentacoes_DIF",
"winsored_Movimentacoes_PERC",
"winsored_Movimentacoes_Anterior",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Credito_PERC",
"winsored_Credito_DIF",
"winsored_Rentabilidade",
"winsored_Rentabilidade_DIF",
"winsored_Rentabilidade_Anterior",
"winsored_Rentabilidade_PERC")
box_plot(credit, variaveisIniciais, NULL)
dtAmostra =
dtAmostra %>%
mutate(Evadiu_formatado = ifelse(Evadiu == 1, "Sim", "Não")) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1)) %>%
mutate(winsored_Produtos = psych::winsor(Produtos, 0.01)) %>%
mutate(winsored_Produtos_Qualificados_PERC = psych::winsor(Produtos_Qualificados_PERC, 0.01)) %>%
mutate(winsored_Produtos_PERC = psych::winsor(Produtos_PERC, 0.01)) %>%
mutate(winsored_Movimentacoes = psych::winsor(Movimentacoes, 0.1)) %>%
mutate(winsored_Movimentacoes_DIF = psych::winsor(Movimentacoes_DIF, 0.1)) %>%
mutate(winsored_Movimentacoes_PERC = psych::winsor(Movimentacoes_PERC, 0.1)) %>%
mutate(winsored_Aplicacao = psych::winsor(Aplicacao, 0.1)) %>%
mutate(winsored_Aplicacao_Anterior = psych::winsor(Aplicacao_Anterior, 0.1)) %>%
mutate(winsored_Aplicacao_DIF = psych::winsor(Aplicacao_DIF, 0.1)) %>%
mutate(winsored_Aplicacao_PERC = psych::winsor(Aplicacao_PERC, 0.1)) %>%
mutate(winsored_Credito = psych::winsor(Credito, 0.1)) %>%
mutate(winsored_Credito_Anterior = psych::winsor(Credito_Anterior, 0.1)) %>%
mutate(winsored_Credito_DIF = psych::winsor(Credito_DIF, 0.1)) %>%
mutate(winsored_Credito_PERC = psych::winsor(Credito_PERC, 0.1)) %>%
mutate(winsored_Rentabilidade = psych::winsor(Rentabilidade, 0.1)) %>%
mutate(winsored_Rentabilidade_Anterior = psych::winsor(Rentabilidade_Anterior, 0.1)) %>%
mutate(winsored_Rentabilidade_DIF = psych::winsor(Rentabilidade_DIF, 0.1)) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1))
box_plot(credit, variaveisIniciais, NULL)
dtAmostra =
dtAmostra %>%
mutate(Evadiu_formatado = ifelse(Evadiu == 1, "Sim", "Não")) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1)) %>%
mutate(winsored_Produtos = psych::winsor(Produtos, 0.01)) %>%
mutate(winsored_Produtos_Qualificados_PERC = psych::winsor(Produtos_Qualificados_PERC, 0.01)) %>%
mutate(winsored_Produtos_PERC = psych::winsor(Produtos_PERC, 0.01)) %>%
mutate(winsored_Movimentacoes = psych::winsor(Movimentacoes, 0.1)) %>%
mutate(winsored_Movimentacoes_Anterior = psych::winsor(Movimentacoes_Anterior, 0.1)) %>%
mutate(winsored_Movimentacoes_DIF = psych::winsor(Movimentacoes_DIF, 0.1)) %>%
mutate(winsored_Movimentacoes_PERC = psych::winsor(Movimentacoes_PERC, 0.1)) %>%
mutate(winsored_Aplicacao = psych::winsor(Aplicacao, 0.1)) %>%
mutate(winsored_Aplicacao_Anterior = psych::winsor(Aplicacao_Anterior, 0.1)) %>%
mutate(winsored_Aplicacao_DIF = psych::winsor(Aplicacao_DIF, 0.1)) %>%
mutate(winsored_Aplicacao_PERC = psych::winsor(Aplicacao_PERC, 0.1)) %>%
mutate(winsored_Credito = psych::winsor(Credito, 0.1)) %>%
mutate(winsored_Credito_Anterior = psych::winsor(Credito_Anterior, 0.1)) %>%
mutate(winsored_Credito_DIF = psych::winsor(Credito_DIF, 0.1)) %>%
mutate(winsored_Credito_PERC = psych::winsor(Credito_PERC, 0.1)) %>%
mutate(winsored_Rentabilidade = psych::winsor(Rentabilidade, 0.1)) %>%
mutate(winsored_Rentabilidade_Anterior = psych::winsor(Rentabilidade_Anterior, 0.1)) %>%
mutate(winsored_Rentabilidade_DIF = psych::winsor(Rentabilidade_DIF, 0.1)) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1))
box_plot(credit, variaveisIniciais, NULL)
box_plot(credit, variaveisIniciais, NULL)
dtAmostra <- fread("dadosBanco/Amostra_Modelo_Evasao_Correntistas_v3.csv")
str(dtAmostra)
dtAmostra <- fread("dadosBanco/Amostra_Modelo_Evasao_Correntistas_v3.csv")
str(dtAmostra)
box_plot(credit, c("Aplicacao"), NULL)
dtAmostra =
dtAmostra %>%
mutate(Evadiu_formatado = ifelse(Evadiu == 1, "Sim", "Não")) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1)) %>%
mutate(winsored_Produtos = psych::winsor(Produtos, 0.01)) %>%
mutate(winsored_Produtos_Qualificados_PERC = psych::winsor(Produtos_Qualificados_PERC, 0.01)) %>%
mutate(winsored_Produtos_PERC = psych::winsor(Produtos_PERC, 0.01)) %>%
mutate(winsored_Movimentacoes = psych::winsor(Movimentacoes, 0.1)) %>%
mutate(winsored_Movimentacoes_Anterior = psych::winsor(Movimentacoes_Anterior, 0.1)) %>%
mutate(winsored_Movimentacoes_DIF = psych::winsor(Movimentacoes_DIF, 0.1)) %>%
mutate(winsored_Movimentacoes_PERC = psych::winsor(Movimentacoes_PERC, 0.1)) %>%
mutate(winsored_Aplicacao = psych::winsor(Aplicacao, 0.1)) %>%
mutate(winsored_Aplicacao_Anterior = psych::winsor(Aplicacao_Anterior, 0.1)) %>%
mutate(winsored_Aplicacao_DIF = psych::winsor(Aplicacao_DIF, 0.1)) %>%
mutate(winsored_Aplicacao_PERC = psych::winsor(Aplicacao_PERC, 0.1)) %>%
mutate(winsored_Credito = psych::winsor(Credito, 0.1)) %>%
mutate(winsored_Credito_Anterior = psych::winsor(Credito_Anterior, 0.1)) %>%
mutate(winsored_Credito_DIF = psych::winsor(Credito_DIF, 0.1)) %>%
mutate(winsored_Credito_PERC = psych::winsor(Credito_PERC, 0.1)) %>%
mutate(winsored_Rentabilidade = psych::winsor(Rentabilidade, 0.1)) %>%
mutate(winsored_Rentabilidade_Anterior = psych::winsor(Rentabilidade_Anterior, 0.1)) %>%
mutate(winsored_Rentabilidade_DIF = psych::winsor(Rentabilidade_DIF, 0.1)) %>%
mutate(winsored_Rentabilidade_PERC = psych::winsor(Rentabilidade_PERC, 0.1))
box_plot(credit, c("Aplicacao"), NULL)
dtAmostra$Evadiu <- as.factor(dtAmostra$Evadiu)
dtAmostra$Debito_Automatico <- as.factor(dtAmostra$Debito_Automatico)
dtAmostra$Credito_Salario <- as.factor(dtAmostra$Credito_Salario)
dtAmostra$Credenciamento <- as.factor(dtAmostra$Credenciamento)
dtAmostra$Caixa_Seguradora <- as.factor(dtAmostra$Caixa_Seguradora)
dtAmostra$Pediu_Portabilidade <- as.factor(dtAmostra$Pediu_Portabilidade)
dtAmostra$Abriu_Reclamacao <- as.factor(dtAmostra$Abriu_Reclamacao)
dtAmostra$Debito_Automatico_DIF <- as.factor(dtAmostra$Debito_Automatico_DIF)
dtAmostra$Credito_Salario_DIF <- as.factor(dtAmostra$Credito_Salario_DIF)
dtAmostra$Caixa_Seguradora_DIF <- as.factor(dtAmostra$Caixa_Seguradora_DIF)
dtAmostra = dtAmostra %>% mutate(Evadiu_formatado = ifelse(Evadiu == 1, "Sim", "Não"))
str(dtAmostra)
box_plot(credit, c("Aplicacao"), NULL)
variaveisSubgrupo <- c("Segmento", "Credenciamento", "Caixa_Seguradora", "Caixa_Seguradora_DIF", "Credito_Salario", "Debito_Automatico", "Credito_Salario_DIF", "Debito_Automatico_DIF")
variaveisIniciais <- c("Produtos",
"Produtos_Anterior",
"Produtos_DIF",
"winsored_Produtos_Qualificados_PERC",
"Produtos_Qualificados_DIF",
"Produtos_Qualificados_Anterior",
"Produtos_Qualificados",
"winsored_Produtos_PERC",
"winsored_Aplicacao",
"winsored_Aplicacao_Anterior",
"winsored_Aplicacao_PERC",
"winsored_Aplicacao_DIF",
"winsored_Movimentacoes",
"winsored_Movimentacoes_DIF",
"winsored_Movimentacoes_PERC",
"winsored_Movimentacoes_Anterior",
"winsored_Credito",
"winsored_Credito_Anterior",
"winsored_Credito_PERC",
"winsored_Credito_DIF",
"winsored_Rentabilidade",
"winsored_Rentabilidade_DIF",
"winsored_Rentabilidade_Anterior",
"winsored_Rentabilidade_PERC")
box_plot(credit, variaveisIniciais, NULL)
box_plot(credit, c("winsored_Movimentacoes", "Produtos_Qualificados", "winsored_Aplicacao_PERC", "winsored_Credito_DIF"), variaveisSubgrupo)
stargazer(dtAmostra, type = "text")
dtAmostra(max(dtAmostra$Aplicacao))
dtAmostra(max(dtAmostra$Aplicacao))
dtAmostra(max("Aplicacao"))
dtAmostra()
dtAmostra[max("Aplicacao"),,]
dtAmostra[max(dtAmostra$Aplicacao),,]
dtAmostra[,dtAmostra$Aplicacao,]
dtAmostra[,dtAmostra$Aplicacao,]
dtAmostra[dtAmostra$Aplicacao,,]
dtAmostra["Aplicacao"]
dtAmostra[dtAmostra$Aplicacao]
dtAmostra[.N]
dtAmostra["Aplicacao"]
max(dtAmostra["Aplicacao"])
stargazer(dtAmostra, type = "text")
stargazer(dtAmostra, type = "text")
max(dtAmostra["Aplicacao"])
